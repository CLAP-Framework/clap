#!/usr/bin/env python

import rospy

from zzz_common.params import parse_private_args
from zzz_perception_msgs.msg import DetectionBoxArray
from zzz_perception_detection_lidar_filters.estimators import LShapeFilter

class FilterNode():
    def __init__(self):
        params = parse_private_args(
            input_topic="objects_detected",
            output_topic="objects_filtered"
        )

        self._subscriber = rospy.Subscriber(params.pop("input_topic"), DetectionBoxArray, self.callback)
        self._publisher = rospy.Publisher(params.pop("output_topic"), DetectionBoxArray, queue_size=1)
        self._filter = LShapeFilter(**params)

    def callback(self, msg):
        self._publisher.publish(self._filter.filter(msg))

if __name__ == "__main__":
    rospy.init_node("lshape_filter")
    node = FilterNode()
    rospy.spin()
