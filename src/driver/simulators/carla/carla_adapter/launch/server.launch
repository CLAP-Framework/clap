<launch>
    <!-- Carla setup & conversion -->
    <arg name="carla_settings_file" default="$(find zzz_driver_simulators_carla_adapter)/launch/server.launch.yaml"/>
    <arg name="vehicle_sensors_file" default="$(find zzz_driver_simulators_carla_adapter)/config/vehicle_sensors.example.json"/>
    <arg name="static_sensors_file" default="$(find zzz_driver_simulators_carla_adapter)/config/static_sensors.example.json"/>
    <arg name="ego_actor" default='ego_vehicle'/>
    <arg name="ego_vehicle_spawn" default="False"/> <!-- By default we use script to spawn vehicles -->
    <arg name="ego_spawn_point" default="0,0,0,0,0,0"/> <!-- use comma separated format "x,y,z,roll,pitch,yaw" -->

    <rosparam file="$(arg carla_settings_file)" command="load" />

    <group if="$(eval ego_vehicle_spawn)">
        <node pkg="carla_ego_vehicle" type="carla_ego_vehicle.py" name="carla_ego_vehicle_$(arg ego_actor)" output="screen">
        <param name="sensor_definition_file" value="$(arg vehicle_sensors_file)" />
        <param name="vehicle_filter" value="vehicle.*" />
        <param name="spawn_point" value="$(arg ego_spawn_point)" />
        <param name="ego_actor" value="$(arg ego_actor)" />
        </node>
    </group>
    <node pkg="carla_infrastructure" type="carla_infrastructure.py" name="carla_infrastructure" output="screen">
      <param name="infrastructure_sensor_definition_file" value="$(arg static_sensors_file)" />
    </node>
    <node pkg="carla_ros_bridge" name="carla_ros_bridge" type="bridge.py" output="screen"/>
    <node pkg="carla_waypoint_publisher" type="carla_waypoint_publisher.py" name="carla_waypoint_publisher" output="screen">
        <param name="ego_actor" value="$(arg ego_actor)" />
    </node>
</launch>
