<launch>
    <!-- Carla related -->
    <group>
        <rosparam file="$(dirname)/car_following_benchmark.yaml" command="load" />
        <node pkg="carla_ros_bridge" name="carla_ros_bridge" type="bridge.py" output="screen"/>
        <node pkg="carla_ego_vehicle" type="carla_ego_vehicle.py" name="vehicle_egov" output="screen">
            <param name="sensor_definition_file" value="$(dirname)/car_following_benchmark_egov.json" />
            <param name="vehicle_filter" value="vehicle.*"/>
            <param name="spawn_point" value=""/>
            <param name="role_name" value="egov"/>
            <param name="spawn_ego_vehicle" value="True"/>
        </node>
        <node pkg="zzz_driver_simulators_carla_adapter" type="convert_topic" name="convert_map" output="screen">
            <param name="input_topic" value="/carla/world_info" />
            <param name="output_topic" value="/carla/static_map" />
            <param name="msg_type" value="CarlaWorldInfo" />
        </node>
    </group>

    <!-- Ego vehicle -->
    <group ns="egov">

        <!-- Carla Adapters -->
        <node pkg="zzz_driver_simulators_carla_adapter" type="convert_topic" name="convert_command" output="screen">
            <param name="input_topic" value="/egov/zzz/control/command" />
            <param name="output_topic" value="/carla/egov/vehicle_control_cmd" />
            <param name="msg_type" value="ControlCommand" />
        </node>
        <node pkg="zzz_driver_simulators_carla_adapter" type="convert_topic" name="convert_objects" output="screen">
            <param name="input_topic" value="/carla/egov/objects" />
            <param name="output_topic" value="/egov/zzz/perception/objects_truth" />
            <param name="msg_type" value="ObjectArray" />
        </node>

        <!-- Core Modules -->
        <node pkg="zzz_navigation_pose_reporter" type="manual" name="pose_reporter" output="screen" ns="zzz/navigation">
            <param name="map_origin" value="[49,8,0]"/>
            <param name="odom_input_topic" value="/carla/egov/odometry"/>
        </node>
        <node pkg="zzz_navigation_map_provider_sumo" type="local_map_generator" name="static_map_builder" output="screen" ns="zzz/navigation">
            <param name="map_input_topic" value="/carla/static_map"/>
        </node>
        <node pkg="zzz_cognition_object_locator" type="nearest_locator" name="nearest_locator" output="screen" ns="zzz/cognition">
            <param name="objects_topic" value="/egov/zzz/perception/objects_truth"/>
            <param name="pose_topic" value="/egov/zzz/navigation/ego_pose"/>
            <param name="map_input_topic" value="/egov/zzz/navigation/local_static_map"/>
            <param name="traffic_light_topic" value="/egov/zzz/perception/traffic_lights"/>
        </node>
        <node pkg="zzz_cognition_object_locator" type="put_buffer" name="put_buffer" output="screen" ns="zzz/cognition">
            <param name="pose_topic" value="/egov/zzz/navigation/ego_pose"/>
            <param name="reference_path_topic" value="/egov/zzz/navigation/reference_path"/>
            <param name="rerouting_requried_topic" value="/egov/zzz/navigation/rerouting"/>
        </node>
        <node pkg="zzz_planning_decision_lane_models" type="idm_lane_utility" name="idm_lane_utility" output="screen" ns="zzz/planning">
            <param name="dynamic_map_topic" value="/egov/zzz/cognition/local_dynamic_map/map_with_ref"/>
        </node>
        <node pkg="zzz_planning_decision_safeguard" type="reachable_set" name="safeguard" output="screen" ns="zzz/planning">
            <param name="dynamic_map_topic" value="/egov/zzz/cognition/local_dynamic_map/map_with_ref"/>
        </node>
        <node pkg="zzz_control_latlon_controllers" type="pure_persuit" name="latlon_controller" output="screen" ns="zzz/control">
            <param name="trajectory_topic" value="/egov/zzz/planning/safeguard_trajectory"/>
            <param name="pose_topic" value="/egov/zzz/navigation/ego_pose"/>
        </node>
    </group>
</launch>
